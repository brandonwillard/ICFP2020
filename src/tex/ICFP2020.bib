
@inproceedings{ArrighiOperationalsemanticsformal2004,
  title = {Operational Semantics for Formal Tensorial Calculus},
  booktitle = {Proceedings of the 2nd {{International Workshop}} on {{Quantum Programming Languages}}},
  author = {Arrighi, Pablo and Dowek, Gilles},
  year = {2004},
  pages = {21--38}
}

@book{BaaderTermrewritingall1999,
  title = {Term Rewriting and All That},
  author = {Baader, Franz and Nipkow, Tobias},
  year = {1999},
  publisher = {{Cambridge university press}},
  url = {https://books.google.com/books?hl=en\&lr=\&id=N7BvXVUCQk8C\&oi=fnd\&pg=PR9\&ots=cN35RbZA_i\&sig=zNk3Wk4w_4YRY6AMKxudY0gIuUI},
  urldate = {2017-05-26}
}

@article{bauschke_symbolic_2006,
  title = {Symbolic Computation of {{Fenchel}} Conjugates},
  author = {Bauschke, Heinz H. and Mohrenschildt, Martin V.},
  year = {2006},
  volume = {40},
  pages = {18},
  issn = {19322240},
  doi = {10.1145/1151446.1151453},
  journal = {ACM Communications in Computer Algebra},
  number = {1}
}

@inproceedings{bergstra_theano:_2010,
  title = {Theano: A {{CPU}} and {{GPU Math Expression Compiler}}},
  booktitle = {Proceedings of the {{Python}} for {{Scientific Computing Conference}} ({{SciPy}})},
  author = {Bergstra, James and Breuleux, Olivier and Bastien, Fr{\'e}d{\'e}ric and Lamblin, Pascal and Pascanu, Razvan and Desjardins, Guillaume and Turian, Joseph and {Warde-Farley}, David and Bengio, Yoshua},
  year = {2010},
  month = jun,
  address = {{Austin, TX}},
  abstract = {Theano is a compiler for mathematical expressions in Python that combines the convenience of NumPy's syntax with the speed of optimized native machine language. The user composes mathematical expressions in a high-level description that mimics NumPy's syntax and semantics, while being statically typed and functional (as opposed to imperative). These expressions allow Theano to provide symbolic differentiation. Before performing computation, Theano optimizes the choice of expressions, translates them into C++ (or CUDA for GPU), compiles them into dynamically loaded Python modules, all automatically. Common machine learning algorithms implemented with Theano are from 1.6\texttimes{} to 7.5\texttimes{} faster than competitive alternatives (including those implemented with C/C++, NumPy/SciPy and MATLAB) when compiled for the CPU and between 6.5\texttimes{} and 44\texttimes{} faster when compiled for the GPU. This paper illustrates how to use Theano, outlines the scope of the compiler, provides benchmarks on both CPU and GPU processors, and explains its overall design.}
}

@article{BhadraDefaultBayesiananalysis2016,
  title = {Default Bayesian analysis with global-local shrinkage priors},
  author = {Bhadra, Anindya and Datta, Jyotishka and Polson, Nicholas G. and Willard, Brandon},
  year = {2016},
  month = dec,
  volume = {103},
  pages = {955-969},
  issn = {0006-3444},
  doi = {10.1093/biomet/asw041},
  journal = {Biometrika},
  keywords = {default bayes,james-stein,shrinkage},
  number = {4}
}

@article{BhadraHorseshoeEstimatorUltraSparse2016,
  title = {The Horseshoe+ Estimator of Ultra-Sparse Signals},
  author = {Bhadra, Anindya and Datta, Jyotishka and Polson, Nicholas G. and Willard, Brandon},
  year = {2016},
  issn = {1936-0975, 1931-6690},
  doi = {10.1214/16-BA1028},
  abstract = {We propose a new prior for ultra-sparse signal detection that we term the “horseshoe+ prior.” The horseshoe+ prior is a natural extension of the horseshoe prior that has achieved success in the estimation and detection of sparse signals and has been shown to possess a number of desirable theoretical properties while enjoying computational feasibility in high dimensions. The horseshoe+ prior builds upon these advantages. Our work proves that the horseshoe+ posterior concentrates at a rate faster than that of the horseshoe in the Kullback–Leibler (K-L) sense. We also establish theoretically that the proposed estimator has lower posterior mean squared error in estimating signals compared to the horseshoe and achieves the optimal Bayes risk in testing up to a constant. For one-group global–local scale mixture priors, we develop a new technique for analyzing the marginal sparse prior densities using the class of Meijer-G functions. In simulations, the horseshoe+ estimator demonstrates superior performance in a standard design setting against competing methods, including the horseshoe and Dirichlet–Laplace estimators. We conclude with an illustration on a prostate cancer data set and by pointing out some directions for future research.},
  journal = {Bayesian Analysis},
  keywords = {\#duplicates,bayesian,Bayesian,global-local shrinkage,global–local shrinkage,hierarchical,horseshoe,horseshoe+,minimax,normal means,sparsity},
  language = {EN}
}

@misc{BLASBasicLinear2020,
  title = {{{BLAS}} ({{Basic Linear Algebra Subprograms}})},
  year = {2020},
  url = {https://www.netlib.org/blas/},
  urldate = {2020-05-20}
}

@article{BoskinSurprisinglyCompetitiveConditional2018,
  title = {A {{Surprisingly Competitive Conditional Operator}}},
  author = {Boskin, Benjamin Strahan and Ma, Weixi and Christiansen, David Thrane and Friedman, Daniel P.},
  year = {2018},
  url = {https://www.brinckerhoff.org/scheme2018/papers/Boskin_Ma_Christiansen_Friedman.pdf}
}

@phdthesis{ByrdRelationalProgrammingminiKanren2009,
  title = {Relational {{Programming}} in {{miniKanren}}: {{Techniques}}, {{Applications}}, and {{Implementations}}},
  shorttitle = {Relational {{Programming}} in {{miniKanren}}},
  author = {Byrd, William E.},
  year = {2009},
  url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.363.5478},
  school = {faculty of the University Graduate School in partial fulfillment of the requirements for the degree Doctor of Philosophy in the Department of Computer Science, Indiana University}
}

@techreport{CaretteModelmanipulationpart2007,
  title = {Model Manipulation as Part of a Better Development Process for Scientific Computing Code},
  author = {Carette, Jacques and Smith, Spencer and McCutchan, John and Anand, Christopher and Korobkine, Alexandre},
  year = {2007},
  institution = {{Technical Report 48, Software Quality Research Laboratory, McMaster University}}
}

@techreport{CaretteSimplifyingProbabilisticPrograms2016,
  title = {Simplifying {{Probabilistic Programs Using Computer Algebra}}},
  author = {Carette, Jacques and Shan, Chung-chieh},
  year = {2016},
  institution = {{Indiana University}},
  url = {https://www.cs.indiana.edu/cgi-bin/techreports/TRNNN.cgi?trnum=TR719},
  urldate = {2018-01-16},
  keywords = {Holonomic functions,integral transforms,measure theory,Probability Theory,Symbolic and Algebraic Manipulation},
  number = {TR719}
}

@article{CasellaRaoBlackwellisationsamplingschemes1996,
  title = {Rao-{{Blackwellisation}} of Sampling Schemes},
  author = {Casella, George and Robert, Christian P.},
  year = {1996},
  volume = {83},
  pages = {81--94},
  url = {http://biomet.oxfordjournals.org/content/83/1/81.short},
  urldate = {2016-10-26},
  journal = {Biometrika},
  number = {1}
}

@article{EndrullisMatrixinterpretationsproving2008,
  title = {Matrix Interpretations for Proving Termination of Term Rewriting},
  author = {Endrullis, J{\"o}rg and Waldmann, Johannes and Zantema, Hans},
  year = {2008},
  volume = {40},
  pages = {195--220},
  journal = {Journal of Automated Reasoning},
  number = {2-3}
}

@misc{GelmanTransformingparameterssimple2019,
  title = {Transforming Parameters in a Simple Time-Series Model; Debugging the {{Jacobian}}},
  author = {Gelman, Andrew},
  year = {2019},
  month = jan,
  url = {https://statmodeling.stat.columbia.edu/2019/01/25/transforming-parameters-in-a-simple-time-series-model-debugging-the-jacobian/},
  urldate = {2019-01-28},
  journal = {Statistical Modeling, Causal Inference, and Social Science},
  type = {Blog}
}

@misc{GeneratorsPythonWiki2020,
  title = {Generators - {{Python Wiki}}},
  year = {2020},
  url = {https://wiki.python.org/moin/Generators},
  urldate = {2020-05-16}
}

@article{GorinovaAutomaticReparameterisationProbabilistic2018,
  title = {Automatic {{Reparameterisation}} in {{Probabilistic Programming}}},
  author = {Gorinova, Maria I. and Moore, Dave and Hoffman, Matthew D.},
  year = {2018}
}

@misc{GraphoptimizationTheano2020,
  title = {Graph Optimization \textemdash{} {{Theano}} 1.0.0 Documentation},
  year = {2020},
  url = {http://www.deeplearning.net/software/theano/extending/optimization.html\#PatternSub},
  urldate = {2020-05-17},
  journal = {Theano}
}

@phdthesis{HamiltonSymbolicconvexanalysis2005,
  title = {Symbolic Convex Analysis},
  author = {Hamilton, Chris H.},
  year = {2005},
  url = {http://docserver.carma.newcastle.edu.au/id/eprint/296},
  urldate = {2017-02-25},
  school = {Simon Fraser University}
}

@article{Hemannframeworkextendingmicrokanren2017,
  title = {A Framework for Extending Microkanren with Constraints},
  author = {Hemann, Jason and Friedman, Daniel P.},
  year = {2017},
  journal = {arXiv preprint arXiv:1701.00633}
}

@inproceedings{HemannmKanrenminimalfunctional2013,
  title = {{{$\mu$Kanren}}: {{A}} Minimal Functional Core for Relational Programming},
  shorttitle = {{{$\mu$Kanren}}},
  booktitle = {Scheme and {{Functional Programming Workshop}} 2013},
  author = {Hemann, Jason and Friedman, Daniel P.},
  year = {2013},
  url = {http://webyrd.net/scheme-2013/papers/HemannMuKanren2013.pdf}
}

@inproceedings{HoffmanAutoconjRecognizingExploiting2018,
  title = {Autoconj: {{Recognizing}} and {{Exploiting Conjugacy Without}} a {{Domain}}-{{Specific Language}}},
  shorttitle = {Autoconj},
  booktitle = {Advances in {{Neural Information Processing Systems}}},
  author = {Hoffman, Matthew D.},
  year = {2018},
  pages = {10737--10747}
}

@article{Huetcompleteproofcorrectness1981,
  title = {A Complete Proof of Correctness of the {{Knuth}}-{{Bendix}} Completion Algorithm},
  author = {Huet, G{\'e}rard},
  year = {1981},
  volume = {23},
  pages = {11--21},
  journal = {Journal of Computer and System Sciences},
  number = {1}
}

@misc{JAX2020,
  title = {{{JAX}}},
  year = {2020},
  month = may,
  url = {https://github.com/google/jax},
  urldate = {2020-05-11},
  abstract = {Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more},
  howpublished = {Google}
}

@misc{Johanssonfungrim2020,
  title = {Fungrim},
  author = {Johansson, Fredrik},
  year = {2020},
  month = may,
  url = {https://github.com/fredrik-johansson/fungrim},
  urldate = {2020-05-16},
  abstract = {Fungrim: the Mathematical Functions Grimoire.},
  copyright = {MIT}
}

@article{KiselyovBacktrackinginterleavingterminating2005,
  title = {Backtracking, Interleaving, and Terminating Monad Transformers:(Functional Pearl)},
  shorttitle = {Backtracking, Interleaving, and Terminating Monad Transformers},
  author = {Kiselyov, Oleg and Shan, Chung-chieh and Friedman, Daniel P. and Sabry, Amr},
  year = {2005},
  volume = {40},
  pages = {192--203},
  journal = {ACM SIGPLAN Notices},
  number = {9}
}

@inproceedings{KleinMaximalcompletion2011,
  title = {Maximal Completion},
  booktitle = {22nd {{International Conference}} on {{Rewriting Techniques}} and {{Applications}} ({{RTA}}'11)},
  author = {Klein, Dominik and Hirokawa, Nao},
  year = {2011},
  publisher = {{Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}}
}

@misc{LAPACKLinearAlgebra2020,
  title = {{{LAPACK}}\,\textemdash\,{{Linear Algebra PACKage}}},
  year = {2020},
  url = {https://www.netlib.org/lapack/},
  urldate = {2020-05-20}
}

@article{LarsenTensorFlowGraphOptimizations2019a,
  title = {{{TensorFlow Graph Optimizations}}},
  author = {Larsen, Rasmus Munk and Shpeisman, Tatiana},
  year = {2019},
  url = {https://research.google/pubs/pub48051/}
}

@article{LukasiewiczProbabilisticlogicprogramming2001,
  title = {Probabilistic Logic Programming with Conditional Constraints},
  author = {Lukasiewicz, Thomas},
  year = {2001},
  volume = {2},
  pages = {289--339},
  url = {http://dl.acm.org/citation.cfm?id=377983},
  urldate = {2017-01-17},
  journal = {ACM Transactions on Computational Logic (TOCL)},
  number = {3}
}

@article{LunnBUGSprojectEvolution2009,
  title = {The {{BUGS}} Project: {{Evolution}}, Critique and Future Directions},
  shorttitle = {The {{BUGS}} Project},
  author = {Lunn, David and Spiegelhalter, David and Thomas, Andrew and Best, Nicky},
  year = {2009},
  volume = {28},
  pages = {3049--3067},
  publisher = {{Wiley Online Library}},
  journal = {Statistics in medicine},
  number = {25}
}

@article{MullinTensorsndArrays2009,
  title = {Tensors and N-d {{Arrays}}:{{A Mathematics}} of {{Arrays}} ({{MoA}}), Psi-{{Calculus}} and the {{Composition}} of {{Tensor}} and {{Array Operations}}},
  shorttitle = {Tensors and N-d {{Arrays}}},
  author = {Mullin, Lenore M. and Raynolds, James E.},
  year = {2009},
  month = jul,
  url = {http://arxiv.org/abs/0907.0796},
  urldate = {2019-04-02},
  abstract = {The Kronecker product is a key algorithm and is ubiquitous across the physical, biological, and computation social sciences. Thus considerations of optimal implementation are important. The need to have high performance and computational reproducibility is paramount. Moreover, due to the need to compose multiple Kronecker products, issues related to data structures, layout and indexing algebra require a new look at an old problem. This paper discusses the outer product/tensor product and a special case of the tensor product: the Kronecker product, along with optimal implementation when composed, and mapped to complex processor/memory hierarchies. We discuss how the use of ``A Mathematics of Arrays" (MoA), and the psi-Calculus, (a calculus of indexing with shapes), provides optimal, verifiable, reproducible, scalable, and portable implementations of both hardware and software.},
  archivePrefix = {arXiv},
  eprint = {0907.0796},
  eprinttype = {arxiv},
  journal = {arXiv:0907.0796 [cs]},
  keywords = {Computer Science - Data Structures and Algorithms,Computer Science - Mathematical Software},
  primaryClass = {cs}
}

@article{neal_slice_2003,
  title = {Slice Sampling},
  author = {Neal, Radford M.},
  year = {2003},
  pages = {705--741},
  url = {http://www.jstor.org/stable/3448413},
  urldate = {2015-11-11},
  journal = {Annals of statistics}
}

@inproceedings{NearalphaleanTAPDeclarativeTheorem2008,
  title = {Alpha-{{leanTAP}}: {{A Declarative Theorem Prover}} for {{First}}-{{Order Classical Logic}}.},
  shorttitle = {Alpha-{{leanTAP}}},
  booktitle = {{{ICLP}}},
  author = {Near, Joseph P. and Byrd, William E. and Friedman, Daniel P.},
  year = {2008},
  volume = {5366},
  pages = {238--252},
  publisher = {{Springer}}
}

@article{peasgood_method_2009,
  title = {A {{Method}} to {{Symbolically Compute Convolution Integrals}}},
  author = {Peasgood, Richard},
  year = {2009},
  url = {https://uwspace.uwaterloo.ca/handle/10012/4884},
  urldate = {2016-01-20}
}

@misc{PEP342Coroutines2020,
  title = {{{PEP}} 342 -- {{Coroutines}} via {{Enhanced Generators}}},
  year = {2020},
  url = {https://www.python.org/dev/peps/pep-0342/},
  urldate = {2020-05-18},
  abstract = {The official home of the Python Programming Language},
  journal = {Python.org},
  language = {en},
  note = {Library Catalog: www.python.org}
}

@misc{PEP424method2020,
  title = {{{PEP}} 424 -- {{A}} Method for Exposing a Length Hint},
  year = {2020},
  url = {https://www.python.org/dev/peps/pep-0424/},
  urldate = {2020-05-22},
  abstract = {The official home of the Python Programming Language},
  journal = {Python.org},
  language = {en},
  note = {Library Catalog: www.python.org}
}

@article{polson_bayesian_2013,
  title = {Bayesian Inference for Logistic Models Using {{P{\'o}lya}}\textendash{{Gamma}} Latent Variables},
  author = {Polson, Nicholas G. and Scott, James G. and Windle, Jesse},
  year = {2013},
  volume = {108},
  pages = {1339--1349},
  url = {http://www.tandfonline.com/doi/abs/10.1080/01621459.2013.829001},
  urldate = {2015-07-24},
  journal = {Journal of the American Statistical Association},
  keywords = {logistic regression,polya-gamma},
  number = {504}
}

@misc{PythonSoftwareFoundationExpressionsPythondocumentation2020,
  title = {6. {{Expressions}} \textemdash{} {{Python}} 3.8.3 Documentation},
  author = {Python Software Foundation},
  year = {2020},
  url = {https://docs.python.org/3/reference/expressions.html\#yieldexpr},
  urldate = {2020-05-22},
  journal = {The Python Language Reference}
}

@misc{PyTorch2020,
  title = {{{PyTorch}}},
  year = {2020},
  month = may,
  url = {https://github.com/pytorch/pytorch},
  urldate = {2020-05-18},
  abstract = {Tensors and Dynamic neural networks in Python with strong GPU acceleration},
  howpublished = {pytorch},
  keywords = {autograd,deep-learning,gpu,machine-learning,neural-network,numpy,python,tensor}
}

@misc{RadulRules2020,
  title = {Rules},
  author = {Radul, Alexey},
  year = {2020},
  month = may,
  url = {https://github.com/axch/rules},
  urldate = {2020-05-22},
  abstract = {An extensible pattern matching, pattern dispatch, and term rewriting system for MIT Scheme.},
  copyright = {AGPL-3.0}
}

@inproceedings{roach_meijer_1997,
  title = {Meijer {{G}} Function Representations},
  booktitle = {Proceedings of the 1997 International Symposium on {{Symbolic}} and Algebraic Computation},
  author = {Roach, Kelly},
  year = {1997},
  pages = {205--211},
  publisher = {{ACM}}
}

@book{robert_bayesian_2007,
  title = {The {{Bayesian}} Choice: From Decision-Theoretic Foundations to Computational Implementation},
  shorttitle = {The {{Bayesian}} Choice},
  author = {Robert, Christian},
  year = {2007},
  publisher = {{Springer Science \& Business Media}},
  url = {https://books.google.com/books?hl=en\&lr=\&id=6oQ4s8Pq9pYC\&oi=fnd\&pg=PR7\&dq=robert+bayesian+choice\&ots=qCKZiHXdKh\&sig=69Qk38It3hHD84ufC2dvXtumFlY},
  urldate = {2015-11-20}
}

@misc{RocklinlogpyLogicProgramming2018,
  title = {Logpy: {{Logic Programming}} in {{Python}}},
  shorttitle = {Logpy},
  author = {Rocklin, Matthew},
  year = {2018},
  month = jan,
  url = {https://github.com/logpy/logpy},
  urldate = {2018-01-07},
  copyright = {BSD-3-Clause}
}

@phdthesis{RocklinMathematicallyinformedlinear2013,
  title = {Mathematically Informed Linear Algebra Codes through Term Rewriting},
  author = {Rocklin, Matthew},
  year = {2013},
  url = {http://people.cs.uchicago.edu/~mrocklin/storage/dissertation.pdf},
  urldate = {2016-09-20},
  school = {PhD Thesis, August}
}

@misc{Rocklinmultipledispatch2019,
  title = {Multipledispatch},
  author = {Rocklin, Matthew},
  year = {2019},
  month = jan,
  url = {https://github.com/mrocklin/multipledispatch},
  urldate = {2019-01-22},
  copyright = {View license}
}

@misc{RossumNeopythonicTailRecursion2009a,
  title = {Neopythonic: {{Tail Recursion Elimination}}},
  shorttitle = {Neopythonic},
  author = {Rossum, Guido Van},
  year = {2009},
  month = apr,
  url = {https://neopythonic.blogspot.com/2009/04/tail-recursion-elimination.html},
  urldate = {2020-05-22},
  journal = {Neopythonic},
  note = {Library Catalog: Blogger}
}

@article{SalvatierProbabilisticprogrammingPython2016,
  title = {Probabilistic Programming in {{Python}} Using {{PyMC3}}},
  author = {Salvatier, John and Wiecki, Thomas V. and Fonnesbeck, Christopher},
  year = {2016},
  month = apr,
  volume = {2},
  pages = {e55},
  issn = {2376-5992},
  doi = {10.7717/peerj-cs.55},
  journal = {PeerJ Computer Science},
  language = {en}
}

@article{SatoFormalverificationhigherorder2018,
  title = {Formal Verification of Higher-Order Probabilistic Programs},
  author = {Sato, Tetsuya and Aguirre, Alejandro and Barthe, Gilles and Gaboardi, Marco and Garg, Deepak and Hsu, Justin},
  year = {2018},
  journal = {arXiv preprint arXiv:1807.06091}
}

@article{SchorlemmerBirewritingrewritinglogic1996,
  title = {Bi-Rewriting Rewriting Logic},
  author = {Schorlemmer, W. Marco},
  year = {1996},
  volume = {4},
  pages = {266--283},
  journal = {Electronic Notes in Theoretical Computer Science}
}

@article{scott_parameter_2010,
  title = {Parameter expansion in local-shrinkage models},
  author = {Scott, James G.},
  year = {2010},
  url = {http://arxiv.org/abs/1010.5265},
  urldate = {2015-06-13},
  journal = {arXiv preprint arXiv:1010.5265},
  keywords = {MCMC,Normal scale mixtures,parameter expansion,sparsity}
}

@inproceedings{ShanExactBayesianInference2017,
  title = {Exact {{Bayesian Inference}} by {{Symbolic Disintegration}}},
  booktitle = {Proceedings of the 44th {{ACM SIGPLAN Symposium}} on {{Principles}} of {{Programming Languages}}},
  author = {Shan, Chung-chieh and Ramsey, Norman},
  year = {2017},
  pages = {130--144},
  publisher = {{ACM}},
  address = {{New York, NY, USA}},
  doi = {10.1145/3009837.3009852},
  abstract = {Bayesian inference, of posterior knowledge from prior knowledge and observed evidence, is typically defined by Bayes{\^a}s rule, which says the posterior multiplied by the probability of an observation equals a joint probability. But the observation of a continuous quantity usually has probability zero, in which case Bayes{\^a}s rule says only that the unknown times zero is zero. To infer a posterior distribution from a zero-probability observation, the statistical notion of disintegration tells us to specify the observation as an expression rather than a predicate, but does not tell us how to compute the posterior. We present the first method of computing a disintegration from a probabilistic program and an expression of a quantity to be observed, even when the observation has probability zero. Because the method produces an exact posterior term and preserves a semantics in which monadic terms denote measures, it composes with other inference methods in a modular way{\^a}without sacrificing accuracy or performance.},
  isbn = {978-1-4503-4660-3},
  keywords = {conditional measures,continuous distributions,probabilistic programs},
  series = {{{POPL}} 2017}
}

@book{standevelopmentteam_stan_2014,
  title = {Stan: {{A C}}++ {{Library}} for {{Probability}} and {{Sampling}}, {{Version}} 2.2},
  author = {{Stan Development Team}},
  year = {2014},
  url = {http://mc-stan.org/}
}

@article{SwordsGuidedSearchminiKanren,
  title = {Guided {{Search}} in {{miniKanren}}},
  author = {Swords, Cameron and Friedman, Daniel P.}
}

@book{sympydevelopmentteam_sympy_2014,
  title = {{{SymPy}}: {{Python}} Library for Symbolic Mathematics},
  author = {{SymPy Development Team}},
  year = {2014},
  url = {http://www.sympy.org}
}

@misc{tangent2020,
  title = {Tangent},
  year = {2020},
  month = may,
  url = {https://github.com/google/tangent},
  urldate = {2020-05-20},
  abstract = {Source-to-Source Debuggable Derivatives in Pure Python},
  copyright = {Apache-2.0},
  howpublished = {Google},
  keywords = {autodiff,automatic-differentiation,deep-learning,machine-learning}
}

@misc{TensorFlow2020,
  title = {{{TensorFlow}}},
  year = {2020},
  month = may,
  url = {https://github.com/tensorflow/tensorflow},
  urldate = {2020-05-18},
  abstract = {An Open Source Machine Learning Framework for Everyone},
  copyright = {Apache-2.0},
  howpublished = {Google},
  keywords = {deep-learning,deep-neural-networks,distributed,machine-learning,ml,neural-network,python,tensorflow}
}

@article{VasilacheTensorComprehensionsFrameworkAgnostic2018,
  title = {Tensor {{Comprehensions}}: {{Framework}}-{{Agnostic High}}-{{Performance Machine Learning Abstractions}}},
  shorttitle = {Tensor {{Comprehensions}}},
  author = {Vasilache, Nicolas and Zinenko, Oleksandr and Theodoridis, Theodoros and Goyal, Priya and DeVito, Zachary and Moses, William S. and Verdoolaege, Sven and Adams, Andrew and Cohen, Albert},
  year = {2018},
  journal = {arXiv preprint arXiv:1802.04730}
}

@article{Waliahighlevelinferencealgorithms2018,
  title = {From High-Level Inference Algorithms to Efficient Code},
  author = {Walia, Rajan and Narayanan, Praveen and Carette, Jacques and {Tobin-Hochstadt}, Sam and Shan, Chung-chieh},
  year = {2018},
  month = may,
  url = {http://arxiv.org/abs/1805.06562},
  urldate = {2019-09-12},
  abstract = {Probabilistic programming languages are valuable because they allow domain experts to express probabilistic models and inference algorithms without worrying about irrelevant details. However, for decades there remained an important and popular class of probabilistic inference algorithms whose efficient implementation required manual low-level coding that is tedious and error-prone. They are algorithms whose idiomatic expression requires random array variables that are latent or whose likelihood is conjugate. Although that is how practitioners communicate and compose these algorithms on paper, executing such expressions requires eliminating the latent variables and recognizing the conjugacy by symbolic mathematics. Moreover, matching the performance of handwritten code requires speeding up loops by more than a constant factor. We show how probabilistic programs that directly and concisely express these desired inference algorithms can be compiled while maintaining efficiency. We introduce new transformations that turn high-level probabilistic programs with arrays into pure loop code. We then make great use of domain-specific invariants and norms to optimize the code, and to specialize and JIT-compile the code per execution. The resulting performance is competitive with manual implementations.},
  archivePrefix = {arXiv},
  eprint = {1805.06562},
  eprinttype = {arxiv},
  journal = {arXiv:1805.06562 [cs, math]},
  keywords = {Computer Science - Programming Languages,Mathematics - Probability},
  primaryClass = {cs, math}
}

@article{WeiDLVMmoderncompiler2017,
  title = {{{DLVM}}: {{A}} Modern Compiler Framework for Neural Network {{DSLs}}},
  shorttitle = {{{DLVM}}},
  author = {Wei, Richard and Schwartz, Lane and Adve, Vikram},
  year = {2017},
  volume = {51},
  pages = {61801},
  journal = {Urbana}
}

@misc{WillardAutomaticRecenteringRescaling2019,
  title = {Automatic {{Re}}-Centering and {{Re}}-Scaling},
  author = {Willard, Brandon T.},
  year = {2019},
  url = {https://pymc-devs.github.io/symbolic-pymc/theano-radon-example.html},
  urldate = {2020-05-11},
  journal = {Symbolic PyMC documentation}
}

@misc{Willardlogicalunification2020,
  title = {Logical-Unification},
  author = {Willard, Brandon T.},
  year = {2020},
  month = apr,
  url = {https://github.com/pythological/unification},
  urldate = {2020-05-22},
  abstract = {Straightforward unification in Python that's extensible via generic functions.},
  howpublished = {Pythological},
  keywords = {logic-programming,multiple-dispatch,python,unification}
}

@misc{WillardPullRequest272020,
  title = {Pull {{Request}} \#27 {$\cdot$} Pythological/Kanren},
  author = {Willard, Brandon T.},
  year = {2020},
  url = {https://github.com/pythological/kanren/pull/27},
  urldate = {2020-05-23},
  abstract = {ground\_order doesn\&\#39;t really order terms in a way that avoids infinite recursion in term\_walko (e.g. when called by the kanren.assoccomm goals).  There should be a way to handle this\textemdash{}at least be...},
  journal = {GitHub},
  language = {en},
  note = {Library Catalog: github.com}
}

@misc{WillardPythological2020,
  title = {Pythological},
  author = {Willard, Brandon T.},
  year = {2020},
  month = may,
  url = {https://github.com/pythological},
  urldate = {2020-05-11},
  abstract = {Adding more symbolic computation and logic programming to Python - Pythological},
  journal = {GitHub},
  language = {en},
  note = {Library Catalog: github.com}
}

@misc{Willardpythologicalkanren2020,
  title = {Pythological/Kanren},
  author = {Willard, Brandon T.},
  year = {2020},
  url = {https://github.com/pythological/kanren},
  urldate = {2020-05-16},
  abstract = {An extensible, lightweight relational/logic programming DSL written in pure Python - pythological/kanren},
  journal = {GitHub},
  language = {en},
  note = {Library Catalog: github.com}
}

@misc{WillardpythologicalkanrenRelational2020,
  title = {Pythological/Kanren: {{Relational Graph Manipulation}}},
  author = {Willard, Brandon T.},
  year = {2020},
  month = apr,
  url = {https://github.com/pythological/kanren/blob/master/doc/graphs.md\#relational-graph-manipulation},
  urldate = {2020-05-11},
  abstract = {An extensible, lightweight relational/logic programming DSL written in pure Python},
  howpublished = {Pythological}
}

@misc{Willardpythologicalpythoncons2020,
  title = {Pythological/Python-Cons},
  author = {Willard, Brandon T.},
  year = {2020},
  month = mar,
  url = {https://github.com/pythological/python-cons},
  urldate = {2020-05-16},
  abstract = {An implementation of Lisp/Scheme-like cons in Python},
  howpublished = {Pythological},
  keywords = {algebraic-data-types,cons,lisp-like,python,scheme-like}
}

@misc{WillardReadableStringsRelational2018b,
  title = {Readable {{Strings}} and {{Relational Programming}} in {{Hy}}},
  author = {Willard, Brandon T.},
  year = {2018},
  month = dec,
  url = {https://brandonwillard.github.io/readable-strings-and-relational-programming-in-hy.html},
  urldate = {2020-05-19},
  chapter = {articles},
  journal = {Brandon T. Willard},
  language = {en},
  note = {Library Catalog: brandonwillard.github.io}
}

@misc{WillardRoleSymbolicComputation2017,
  title = {A {{Role}} for {{Symbolic Computation}} in the {{General Estimation}} of {{Statistical Models}}},
  author = {Willard, Brandon T.},
  year = {2017},
  month = jan,
  url = {https://brandonwillard.github.io/a-role-for-symbolic-computation-in-the-general-estimation-of-statistical-models.html},
  urldate = {2017-02-11},
  abstract = {A Role for Symbolic Computation in the General Estimation of Statistical Models code\{white-space: pre;\} div.sourceCode \{ overflow-x: auto; \} table.sourceCode, tr.sourceCode, td.lineNumbers, td.sourceCode \{ margin: 0; padding: 0; vertical-align: baseline; border: none; \} table.sourceCode \{ width: 100\%; line-height: 100\%; \} td.lineNumbers \{ text-align: right; padding-right: 4px; padding-left: 4px; background-color ...\vphantom\}},
  journal = {Brandon T. Willard}
}

@misc{Willardsymbolicpymc2019,
  title = {Symbolic-Pymc},
  author = {Willard, Brandon T.},
  year = {2019},
  month = feb,
  url = {https://github.com/pymc-devs/symbolic-pymc},
  urldate = {2020-03-18},
  abstract = {Tools for the symbolic manipulation of PyMC models, Theano, and TensorFlow graphs.},
  howpublished = {PyMC},
  keywords = {bayesian,minikanren,probabilistic-programming,pymc,relational-programming,symbolic-computation,symbolic-math,tensorflow,theano}
}

@misc{WillardTourSymbolicPyMC2020,
  title = {A {{Tour}} of {{Symbolic PyMC}}},
  author = {Willard, Brandon T.},
  year = {2020},
  month = may,
  url = {https://pymc-devs.github.io/symbolic-pymc/symbolic-pymc-tour.html},
  urldate = {2020-05-11},
  journal = {Symbolic PyMC documentation}
}

@article{ZhangNeuralGuidedConstraint2018,
  title = {Neural {{Guided Constraint Logic Programming}} for {{Program Synthesis}}},
  author = {Zhang, Lisa and Rosenblatt, Gregory and Fetaya, Ethan and Liao, Renjie and Byrd, William E. and Might, Matthew and Urtasun, Raquel and Zemel, Richard},
  year = {2018},
  month = sep,
  url = {http://arxiv.org/abs/1809.02840},
  urldate = {2019-03-13},
  abstract = {Synthesizing programs using example input/outputs is a classic problem in artificial intelligence. We present a method for solving Programming By Example (PBE) problems by using a neural model to guide the search of a constraint logic programming system called miniKanren. Crucially, the neural model uses miniKanren's internal representation as input; miniKanren represents a PBE problem as recursive constraints imposed by the provided examples. We explore Recurrent Neural Network and Graph Neural Network models. We contribute a modified miniKanren, drivable by an external agent, available at https://github.com/xuexue/neuralkanren. We show that our neural-guided approach using constraints can synthesize programs faster in many cases, and importantly, can generalize to larger problems.},
  archivePrefix = {arXiv},
  eprint = {1809.02840},
  eprinttype = {arxiv},
  journal = {arXiv:1809.02840 [cs, stat]},
  keywords = {Computer Science - Machine Learning,Statistics - Machine Learning},
  primaryClass = {cs, stat}
}


